name: Build VERSEE Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug
        - profile

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.8'
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Analyze code
      run: flutter analyze --no-fatal-infos
      
    - name: Run tests
      run: flutter test || echo "Tests completed"
      
    - name: Build APK (Release)
      if: github.event.inputs.build_type != 'debug' && github.event.inputs.build_type != 'profile'
      run: flutter build apk --release --no-tree-shake-icons
      
    - name: Build APK (Debug)
      if: github.event.inputs.build_type == 'debug'
      run: flutter build apk --debug --no-tree-shake-icons
      
    - name: Build APK (Profile)
      if: github.event.inputs.build_type == 'profile'
      run: flutter build apk --profile --no-tree-shake-icons
      
    - name: Build Split APKs
      if: github.event.inputs.build_type != 'debug'
      run: flutter build apk --split-per-abi --release --no-tree-shake-icons
      
    - name: Get APK info
      run: |
        echo "## 📱 APK Build Results" >> $GITHUB_STEP_SUMMARY
        echo "### Generated APKs:" >> $GITHUB_STEP_SUMMARY
        ls -la build/app/outputs/flutter-apk/ >> $GITHUB_STEP_SUMMARY
        echo "### APK Sizes:" >> $GITHUB_STEP_SUMMARY
        du -h build/app/outputs/flutter-apk/*.apk >> $GITHUB_STEP_SUMMARY
        
    - name: Upload Universal APK
      uses: actions/upload-artifact@v4
      with:
        name: versee-universal-${{ github.event.inputs.build_type || 'release' }}.apk
        path: build/app/outputs/flutter-apk/app-${{ github.event.inputs.build_type || 'release' }}.apk
        
    - name: Upload Split APKs
      if: github.event.inputs.build_type != 'debug'
      uses: actions/upload-artifact@v4
      with:
        name: versee-split-apks-${{ github.event.inputs.build_type || 'release' }}
        path: build/app/outputs/flutter-apk/app-*-${{ github.event.inputs.build_type || 'release' }}.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && (github.event.inputs.build_type == '' || github.event.inputs.build_type == 'release')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: VERSEE v${{ github.run_number }}
        body: |
          🚀 **VERSEE Android Release v${{ github.run_number }}**
          
          ### 📱 Dual-Screen Church Presentation System
          
          **Features:**
          - ✅ Robust dual-screen presentation system
          - ✅ Firebase integration (Auth, Firestore, Storage)
          - ✅ Media management and optimization
          - ✅ Bible verse display and management
          - ✅ Multi-language support (PT, EN, ES, JA)
          - ✅ Offline functionality
          - ✅ Real-time synchronization
          
          **APK Files:**
          - `app-release.apk` - Universal APK (works on all devices)
          - `app-arm64-v8a-release.apk` - ARM64 devices (recommended)
          - `app-armeabi-v7a-release.apk` - ARM32 devices
          - `app-x86_64-release.apk` - x86_64 devices
          
          **Installation:**
          1. Download the universal APK or the specific one for your device
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Launch VERSEE and enjoy! 🎉
          
          Built with ❤️ using Flutter & Firebase
        files: |
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/flutter-apk/app-*-release.apk
        draft: false
        prerelease: false